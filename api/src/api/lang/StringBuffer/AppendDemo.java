package api.lang.StringBuffer;

public class AppendDemo {
	/*
	 * StinrgBuffer클래스 String 클래스와 차이점은 인스턴스 생성시 문자열을 바꿀수 있고 없고에 있다
	 * 
	 * 
	 * java.lang.StriBuffer 의 메소드인 append () 파라미터로 들어온 String 값을 원래 문자열의 뒤에붙인다.
	 */
	public static void main(String[] args) {
		StringBuffer buf = new StringBuffer();
		StringBuffer buf1 = new StringBuffer("A B C");
		StringBuffer buf2 = buf1.append("D E F");
		String msg;

		if (buf1==buf2) {
			msg = "buf1 == buf2";
		} else {
			msg = "buf1 != buf2";
		}
		System.out.println(msg);
		System.out.println(buf1.toString());
		System.out.println(buf2.toString());
		/*
		buf 2 는 새롭게 생성되어 전달된 객체가 아니며
		buf 1 이 내부적으로 수정되어 전달 받음으로써
		동일한 주소값을 참조한다.
		
		스트링버퍼클래스는 String 클래스와 다르게 무분별하게 객체 생성을 하지 않는다.
		직접 수정할 수 있는 가변성의 특징이 있다.
		그러므로 빈번한 문자열 수정 작업이 필요한 경우 
		String 클래스보다 StrinBufferㄴ클래스가 더유용하다.
		*/	
	}
}
